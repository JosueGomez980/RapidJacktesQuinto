DROP DATABASE IF EXISTS RAPID_JACKETS;

CREATE DATABASE IF NOT EXISTS RAPID_JACKETS;

ALTER SCHEMA RAPID_JACKETS DEFAULT CHARACTER SET utf8;

USE RAPID_JACKETS ;

CREATE TABLE RAPID_JACKETS.CATEGORIA (
  ID_CATEGORIA INT NOT NULL AUTO_INCREMENT COMMENT 'Este campo es la llave primaria de la tabla categoría. Es entero para hacer búsquedas más rapidas',
  NOMBRE VARCHAR(100) NOT NULL COMMENT 'Este campo es para almacenar el nombre de la categoria. Es obligatorio',
  ACTIVA BOOLEAN NOT NULL DEFAULT TRUE COMMENT 'Este campo es para hacer una activacion o desactivación de una categoría, por medio de este se verifica si los productos dentro de esta categoria deben mostrarse o no.',
  DESCRIPCION VARCHAR(200) NULL COMMENT 'Este campo es para añadir una descripción adicional de la categoría ',
  CATEGORIA_ID_CATEGORIA INT NOT NULL COMMENT 'Este campo es la llave foránea hacia esta misma tabla para la relación reflexiva. Se usará para hacer categorías que a su vez pertenescan a otras categorías',
  PRIMARY KEY (ID_CATEGORIA), 
  FOREIGN KEY (CATEGORIA_ID_CATEGORIA)
  REFERENCES RAPID_JACKETS.CATEGORIA (ID_CATEGORIA)
  ON DELETE CASCADE 
  ON UPDATE CASCADE
);


CREATE TABLE RAPID_JACKETS.CATALOGO (
  ID_CATALOGO INT NOT NULL AUTO_INCREMENT COMMENT 'Esta es la llave primaria de esta tabla, será autoincremental debido a que no se estima una gran cantidade de registros para esta tabla',
  NOMBRE VARCHAR(100) NOT NULL COMMENT 'Este es el nombre del catalogo. No se admitiran nombres de más de 100 caracteres',
  DESCRIPCION VARCHAR(200) NULL COMMENT 'Este es el campo para la descripcion de cada catalogo. Será un texto corto pues no se estima que el usuario digite un texto tan complejo pára describir un catalogo',
  ACTIVO BOOLEAN NOT NULL DEFAULT TRUE COMMENT 'Este es el campo que servirá para verificar si un catalogo debe estar disponible a la vista para el cliente, en funcion de si está activo o no',
  FOTO VARCHAR(250) DEFAULT 'SIN_ASIGNAR' NULL COMMENT 'La foto será opcional, si no está asignada tomará el valor de SIN_ASIGNAR. Este campo almacenará la direccion relativa de la ubicacion del archivo despues de ser subido a la carpeta de subidas del serrvidor',
  PRIMARY KEY (ID_CATALOGO) 
);


CREATE TABLE RAPID_JACKETS.PRODUCTO (
  ID_PRODUCTO VARCHAR(50) NOT NULL COMMENT 'Esta es la llave primaria de cada producto. Se determina que esta será alfanumerica',
  CATEGORIA_ID_CATEGORIA INT NOT NULL COMMENT 'Esta es una llave foranea del producto. Un producto puede petenecer a una categoria para agilizar las búsquedas',
  CATALOGO_ID_CATALOGO INT NOT NULL COMMENT 'Esta es una llave foranea del producto. Un producto puede petenecer a un catalogo para agilizar las búsquedas',
  NOMBRE VARCHAR(250) NOT NULL COMMENT 'Este campo es para el nombre del producto. Es obligatorio pues una de las funcionalidades del sistema será la busqueda de productos según el nombre.',
  PRECIO DOUBLE NOT NULL COMMENT 'Campo numerico real para almacenar el precio unitario de un producto',
  ACTIVO BOOLEAN NOT NULL DEFAULT TRUE COMMENT 'Este campo booleano es para deteminar si un producto ha sido activado o desactivado. Si está activado estará disponible en el catalogo al que se encuentre realacionado',
  CANTIDAD INT NOT NULL COMMENT 'Campo entero para almacena la cantidad de productos disponibles para la venta. Este campo será actulizado tras actualizarse correctamente la tabla de inventarios del producto',
  DESCRIPCION TEXT NULL COMMENT 'Este campo se reservará para la descripcion de un producto. Admitirá textos largos debido a que va a contener formato con css y html',
  FOTO VARCHAR(250) NOT NULL DEFAULT 'SIN_ASIGNAR' COMMENT 'La foto será opcional, si no está asignada tomará el valor de SIN_ASIGNAR. Este campo almacenará la direccion relativa de la ubicacion del archivo despues de ser subido a la carpeta de subidas del serrvidor',
  PRIMARY KEY (ID_PRODUCTO),
  FOREIGN KEY (CATEGORIA_ID_CATEGORIA)
  REFERENCES RAPID_JACKETS.CATEGORIA (ID_CATEGORIA),
  FOREIGN KEY (CATALOGO_ID_CATALOGO)
  REFERENCES RAPID_JACKETS.CATALOGO (ID_CATALOGO)
);


CREATE TABLE RAPID_JACKETS.USUARIO (
  ID_USUARIO VARCHAR(255) NOT NULL COMMENT 'Esta es la llave promaria de la tabla usuario. Corresponde al nickname digitado por el usuario que se reguistre como cliente en el sistema.',
  CONTRASENA VARCHAR(255) NOT NULL COMMENT 'Esta campo es para la contraseña del usuario. ',
  ROL VARCHAR(50) NOT NULL DEFAULT 'USER' COMMENT '',
  ESTADO VARCHAR(20) NOT NULL DEFAULT 'ENABLED' COMMENT '',
  EMAIL VARCHAR(255) UNIQUE NOT NULL COMMENT '',
  PRIMARY KEY (ID_USUARIO),
  CHECK(ESTADO IN('USER','MANAGER','SUB_MANAGER','','',''))
);


CREATE TABLE RAPID_JACKETS.CUENTA (
  TIPO_DOCUMENTO VARCHAR(10) NOT NULL COMMENT '',
  NUM_DOCUMENTO VARCHAR(60) NOT NULL COMMENT '',
  USUARIO_ID_USUARIO VARCHAR(255) NOT NULL COMMENT '',
  PRIMER_NOMBRE VARCHAR(100) NOT NULL COMMENT '',
  SEGUNDO_NOMBRE VARCHAR(100) NULL COMMENT '',
  PRIMER_APELLIDO VARCHAR(100) NOT NULL COMMENT '',
  SEGUNDO_APELLIDO VARCHAR(100) NULL COMMENT '',
  TELEFONO VARCHAR(50) NOT NULL DEFAULT 'SIN_ASIGNAR' COMMENT '',
  PRIMARY KEY (TIPO_DOCUMENTO, NUM_DOCUMENTO),
  FOREIGN KEY (USUARIO_ID_USUARIO)
  REFERENCES RAPID_JACKETS.USUARIO (ID_USUARIO)
);


CREATE TABLE RAPID_JACKETS.DOMICILIO_CUENTA (
  CUENTA_TIPO_DOCUMENTO VARCHAR(10) NOT NULL COMMENT '',
  CUENTA_NUM_DOCUMENTO VARCHAR(60) NOT NULL COMMENT '',
  DIRECCION VARCHAR(100) NOT NULL COMMENT '',
  TELEFONO VARCHAR(50) NULL COMMENT '',
  BARRIO VARCHAR(60) NULL COMMENT '',
  LOCALIDAD VARCHAR(60) NULL COMMENT '',
  CORREO_POSTAL VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (CUENTA_TIPO_DOCUMENTO, CUENTA_NUM_DOCUMENTO),
  FOREIGN KEY (CUENTA_TIPO_DOCUMENTO , CUENTA_NUM_DOCUMENTO)
  REFERENCES RAPID_JACKETS.CUENTA (TIPO_DOCUMENTO , NUM_DOCUMENTO)
);

CREATE TABLE RAPID_JACKETS.INVENTARIO (
  ID_INVENTARIO VARCHAR(20) NOT NULL COMMENT '',
  PRODUCTO_ID_PRODUCTO VARCHAR(50) NOT NULL COMMENT '',
  FECHA DATETIME NOT NULL COMMENT '',
  CANTIDAD INT NOT NULL COMMENT '',
  PRECIO_MAYOR DOUBLE NOT NULL COMMENT '',
  OBSERVACIONES TEXT NULL COMMENT '',
  PRIMARY KEY (ID_INVENTARIO, PRODUCTO_ID_PRODUCTO),
  FOREIGN KEY (PRODUCTO_ID_PRODUCTO)
  REFERENCES RAPID_JACKETS.PRODUCTO (ID_PRODUCTO)
);

CREATE TABLE RAPID_JACKETS.FACTURA (
  ID_FACTURA VARCHAR(30) NOT NULL COMMENT '',
  CUENTA_TIPO_DOCUMENTO VARCHAR(10) NOT NULL COMMENT '',
  CUENTA_NUM_DOCUMENTO VARCHAR(60) NOT NULL COMMENT '',
  FECHA DATETIME NOT NULL COMMENT '',
  ESTADO VARCHAR(45) NOT NULL DEFAULT 'SIN_PAGAR' COMMENT '',
  OBSERVACIONES TEXT NULL COMMENT '',
  SUBTOTAL DOUBLE NOT NULL COMMENT '',
  IMPUESTOS DOUBLE NULL COMMENT '',
  TOTAL DOUBLE NOT NULL COMMENT '',
  PRIMARY KEY (ID_FACTURA),
  FOREIGN KEY (CUENTA_TIPO_DOCUMENTO , CUENTA_NUM_DOCUMENTO)
  REFERENCES RAPID_JACKETS.CUENTA (TIPO_DOCUMENTO , NUM_DOCUMENTO)
);

CREATE TABLE RAPID_JACKETS.ITEM_FACTURA (
  PRODUCTO_ID_PRODUCTO VARCHAR(50) NOT NULL COMMENT '',
  FACTURA_ID_FACTURA VARCHAR(30) NOT NULL COMMENT '',
  CANTIDAD INT NOT NULL COMMENT '',
  COSTO_UNITARIO DOUBLE NOT NULL COMMENT '',
  COSTO_TOTAL DOUBLE NOT NULL COMMENT '',
  PRIMARY KEY (PRODUCTO_ID_PRODUCTO, FACTURA_ID_FACTURA),
  FOREIGN KEY (PRODUCTO_ID_PRODUCTO)
  REFERENCES RAPID_JACKETS.PRODUCTO (ID_PRODUCTO),
  FOREIGN KEY (FACTURA_ID_FACTURA)
  REFERENCES RAPID_JACKETS.FACTURA (ID_FACTURA)
);


CREATE TABLE RAPID_JACKETS.PEDIDO_ENTREGA (
  FACTURA_ID_FACTURA VARCHAR(30) NOT NULL COMMENT '',
  CUENTA_TIPO_DOCUMENTO VARCHAR(10) NOT NULL COMMENT '',
  CUENTA_NUM_DOCUMENTO VARCHAR(60) NOT NULL COMMENT '',
  DOMICILIO VARCHAR(100) NOT NULL COMMENT '',
  FECHA_SOLICITUD DATETIME NOT NULL COMMENT '',
  FECHA_ENTREGA DATETIME NULL COMMENT '',
  ESTADO VARCHAR(50) NOT NULL DEFAULT 'PEDIDO SOLICITADO' COMMENT '',
  OBSERVACIONES TEXT NULL COMMENT '',
  SUBTOTAL DOUBLE NOT NULL COMMENT '',
  IMPUESTOS DOUBLE NULL COMMENT '',
  TOTAL DOUBLE NOT NULL COMMENT '',
  PRIMARY KEY (FACTURA_ID_FACTURA),
  FOREIGN KEY (FACTURA_ID_FACTURA)
  REFERENCES RAPID_JACKETS.FACTURA (ID_FACTURA),
  FOREIGN KEY (CUENTA_TIPO_DOCUMENTO , CUENTA_NUM_DOCUMENTO)
  REFERENCES RAPID_JACKETS.CUENTA (TIPO_DOCUMENTO , NUM_DOCUMENTO)
);


-- CREATE TABLE RAPID_JACKETS.CARRITO_COMPRAS (
--   ID_CARRITO VARCHAR(30) NOT NULL COMMENT '',
--   TOTAL DOUBLE NOT NULL COMMENT '',
--   SUBTOTAL DOUBLE NOT NULL COMMENT '',
--   IMPUESTOS DOUBLE NULL COMMENT '',
--   PRIMARY KEY (ID_CARRITO)
--   );
-- 
-- CREATE TABLE RAPID_JACKETS.ITEM_CARRITO (
--   PRODUCTO_ID_PRODUCTO VARCHAR(50) NOT NULL COMMENT '',
--   CARRITO_COMPRAS_ID_CARRITO VARCHAR(30) NOT NULL COMMENT '',
--   CANTIDAD INT NOT NULL COMMENT '',
--   COSTO_UNITARIO DOUBLE NOT NULL COMMENT '',
--   COSTO_TOTAL DOUBLE NOT NULL COMMENT '',
--   IMPUESTOS DOUBLE NULL COMMENT '',
--   PRIMARY KEY (PRODUCTO_ID_PRODUCTO, CARRITO_COMPRAS_ID_CARRITO),
--   FOREIGN KEY (PRODUCTO_ID_PRODUCTO)
--   REFERENCES RAPID_JACKETS.PRODUCTO (ID_PRODUCTO),
--   FOREIGN KEY (CARRITO_COMPRAS_ID_CARRITO)
--   REFERENCES RAPID_JACKETS.CARRITO_COMPRAS (ID_CARRITO)
-- );

CREATE TABLE RAPID_JACKETS.PAGO (
  FACTURA_ID_FACTURA VARCHAR(30) NOT NULL COMMENT '',
  TIPO_PAGO VARCHAR(50) NOT NULL COMMENT '',
  VALOR DOUBLE NOT NULL COMMENT '',
  NUMERO_CUENTA VARCHAR(100) NULL COMMENT '',
  NUMERO_TARJETA VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (FACTURA_ID_FACTURA),
  FOREIGN KEY (FACTURA_ID_FACTURA)
  REFERENCES RAPID_JACKETS.FACTURA (ID_FACTURA)
);

